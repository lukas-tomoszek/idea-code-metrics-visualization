# Generate DuckDB SQL for Chart

Description from User:
{{llmDescription}}

---
Task:
Generate a DuckDB SQL query suitable for creating a chart.
The query should:
1. Return two columns.
   - The first column will be used for the X-axis (labels, categories, or time series).
   - The second column will be used for the Y-axis (values).
2. Use placeholders (If relevant):
   - `#method_fqn#`: Fully qualified name of the user-selected method from the current file (or '%' if 'All Methods' is selected).
   - `#feature_name#`: Name of the user-selected feature from the current file (or '%' if 'All Features' is selected).
   - `#method_fqns_in_file#`: A csv of all method FQNs in the current file (e.g., `'com.example.A.method1', 'com.example.A.method2'`).
   - `#feature_names_in_file#`: A csv of all feature names in the current file (e.g., `'feat_a', 'feat_b'`).
   - Examples:
     - `SELECT date_trunc('day', timestamp) AS day, COUNT(*) AS errors FROM my_logs WHERE event = 'ERROR' GROUP BY day ORDER BY day;`
     - `SELECT feature_flag, SUM(value) FROM events WHERE method_fqn LIKE '#method_fqn#' GROUP BY feature_flag;`
     - `SELECT method_name, COUNT(*) AS call_count FROM log_entries WHERE method_name IN (#method_fqns_in_file#)
        GROUP BY method_name ORDER BY call_count DESC;`
3. Refer to the table samples below for available columns and data structure.

_No extra commentaryâ€”SQL only._

---
Available Table Samples (Top 10 rows using `USING SAMPLE 10 ROWS`):

{{tableSamples}}
