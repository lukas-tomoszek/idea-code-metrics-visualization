# Generate DuckDB SQL for Line Marker AND Coloring Rules

**Task 1: Generate DuckDB SQL for Line Marker**
The SQL query must:
1. Return a **single numerical value**.
2. Use the following placeholders as needed:
   - `#method_fqn#`: Fully qualified name of the method at the marker.
   - `#feature_name#`: Feature flag key near the marker.
   - `#method_fqns_in_file#`: CSV of all method FQNs in the current file (e.g., `'com.example.A.method1', 'com.example.A.method2'`).
   - `#feature_names_in_file#`: CSV of all feature names in the current file (e.g., `'feat_a', 'feat_b'`).
   - `#mapping_path#`: HTTP mapping path regex (e.g., `/users/[^/]+`).
   - `#mapping_method#`: HTTP method string (e.g., `'GET'`).
   - `#mapping_paths_in_file#`: CSV of all mapping paths in the current file.
   - `#mapping_methods_in_file#`: CSV of all mapping methods in the current file.
3. Refer to the table samples below for available columns and structure.

**Examples for SQL:**
```sql
SELECT COUNT(*) FROM my_logs WHERE method_fqn = '#method_fqn#' AND event = 'ERROR';

SELECT AVG(latency_ms)
FROM performance_metrics
WHERE method_fqn = '#method_fqn#' AND feature_flag = '#feature_name#';

SELECT
  COUNT(*) FILTER (WHERE method_name = '#method_fqn#') * 1.0 /
  NULLIF(COUNT(*), 1)
FROM log_entries_100
WHERE method_name IN (#method_fqns_in_file#);

SELECT COUNT(*)
FROM apache_log
WHERE method = '#mapping_method#'
  AND REGEXP_MATCHES(path, '^#mapping_path#/?(\?.*)?$');
```

**Task 2: Suggest Coloring Rules**
Based on the metric returned by the SQL query, suggest coloring rules.
- Format each rule on a new line as: `from_exclusive_or_empty;to_inclusive_or_empty;hex_color_or_empty`
- The `from_exclusive` value is not included in the range.
- The `to_inclusive` value is included in the range.
- Empty value can be used for unbounded sides or no color (effectively makes the marker not appear).
- Rules are evaluated in order; the first matching rule applies.

**Examples for Coloring Rules:**
If the metric is a percentage (0-100):
```
;50;#FF0000
50;75;#FFFF00
75;;#00FF00
```
This means:
- Values `X <= 50` are Red (`-inf < X <= 50`)
- Values `50 < X <= 75` are Yellow
- Values `X > 75` are Green (`75 < X <= +inf`)

If the metric is an error count:
```
;0;#00FF00
0;5;#FFFF00
5;;#FF0000
```
This means:
- Count `X <= 0` (0 errors) is Green
- Count `0 < X <= 5` (1-5 errors) is Yellow
- Count `X > 5` (more than 5 errors) is Red (to is empty, implying +inf)

**Description from User for SQL and Rules:**
{{llmDescription}}

**Available Table Samples (Top 10 rows using `USING SAMPLE 10 ROWS`):**
{{tableSamples}}
